/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.isammoc.zooviewer;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.EventListenerList;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;
import net.isammoc.zooviewer.model.ZVModel;
import net.isammoc.zooviewer.model.ZVModelListener;
import net.isammoc.zooviewer.node.ZVNode;
import net.isammoc.zooviewer.tree.JZVTree;
import org.apache.zookeeper.data.Stat;

public class JZVNode extends javax.swing.JFrame {

    private final ZVModel model;
    private ZVNode[] nodes;
    private final DateFormat DATE_FORMAT = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, this.getLocale());
    protected EventListenerList eventListenerList = new EventListenerList();
    private final PropertyChangeListener propertyListener = new PropertyChangeListener() {
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            updateView();
        }
    };

    JPopupMenu treePopupMenu;

    public JZVNode(ZVModel model) {
        this.model = model;
        this.model.addModelListener(new RefreshZVModelListener());
        initComponents();

        this.setTitle("zooviewer " + model.connectionString());

        jTree1.addTreeSelectionListener(new TreeSelectionListener() {
            @Override
            public void valueChanged(TreeSelectionEvent e) {
                // Create the array of selections
                TreePath[] selPaths = jTree1.getSelectionModel().getSelectionPaths();
                if (selPaths == null) {
                    return;
                }
                ZVNode[] nodes = new ZVNode[selPaths.length];
                for (int i = 0; i < selPaths.length; i++) {
                    nodes[i] = (ZVNode) selPaths[i].getLastPathComponent();
                }
                setNodes(nodes);
            }
        });

        DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
                Component comp = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
                if ((comp instanceof JLabel) && (value instanceof ZVNode)) {
                    ZVNode node = (ZVNode) value;
                    String text = node.getName();
//                    byte[] data = node.getData();
//                    if ((data != null) && (data.length > 0)) {
//                        ((JLabel) comp).setToolTipText(new String(data));
//                        text += " = " + new String(data);
//                    }
                    ((JLabel) comp).setText(text);
                    ((JLabel) comp).validate();
                }
                return comp;
            }
        };
        jTree1.setCellRenderer(renderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        buttonDeleteNode = new javax.swing.JButton();
        labelPath = new javax.swing.JLabel();
        labelPathValue = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorPaneStatus = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        editorPaneData = new javax.swing.JEditorPane();
        buttonUpdateData = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldChildName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        editorPaneChildData = new javax.swing.JEditorPane();
        jLabel2 = new javax.swing.JLabel();
        buttonAddChild = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        editorPaneLogger = new javax.swing.JEditorPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree1 = new JZVTree(this, model);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("zooviewer");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        buttonDeleteNode.setText("Delete Node");
        buttonDeleteNode.setToolTipText("Delete node");
        buttonDeleteNode.setEnabled(false);
        buttonDeleteNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteNodeActionPerformed(evt);
            }
        });

        labelPath.setText("Path:");

        labelPathValue.setText("Path");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        editorPaneStatus.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(editorPaneStatus);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        editorPaneData.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        editorPaneData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editorPaneDataKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(editorPaneData);

        buttonUpdateData.setText("Update");
        buttonUpdateData.setToolTipText("Update node data");
        buttonUpdateData.setEnabled(false);
        buttonUpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonUpdateData)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonUpdateData)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonDeleteNode)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(labelPath)
                                .addGap(18, 18, 18)
                                .addComponent(labelPathValue)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPath)
                    .addComponent(labelPathValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(buttonDeleteNode)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Node", jPanel4);

        jLabel1.setText("Name");

        textFieldChildName.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N

        editorPaneChildData.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        editorPaneChildData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editorPaneChildDataKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(editorPaneChildData);

        jLabel2.setText("Data");

        buttonAddChild.setText("Add");
        buttonAddChild.setToolTipText("Add new child");
        buttonAddChild.setEnabled(false);
        buttonAddChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddChildActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(textFieldChildName, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 626, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(buttonAddChild)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldChildName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(buttonAddChild)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Add Child", jPanel5);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("czxid");

        jLabel4.setText("The zxid of the change that caused this znode to be created.");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("mzxid");

        jLabel6.setText("The zxid of the change that last modified this znode.");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("ctime");

        jLabel8.setText("The time in milliseconds from epoch when this znode was created.");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("mtime");

        jLabel10.setText("The time in milliseconds from epoch when this znode was last modified.");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("version");

        jLabel12.setText("The number of changes to the data of this znode.");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("aversion");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("ephemeralOwner");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("dataLength");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("numChildren");

        jLabel16.setText("The number of changes to the ACL of this znode.");

        jLabel18.setText("The session id of the owner of this znode if the znode is an ephemeral node.");

        jLabel20.setText("The length of the data field of this znode.");

        jLabel22.setText("The number of children of this znode.");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("cversion");

        jLabel14.setText("The number of changes to the children of this znode.");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("pzxid");

        jLabel24.setText("The zxid of the change that last modified children of this znode.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jLabel21)
                    .addComponent(jLabel3)
                    .addComponent(jLabel23))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel4)
                    .addComponent(jLabel22)
                    .addComponent(jLabel20)
                    .addComponent(jLabel18)
                    .addComponent(jLabel14)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16))
                .addContainerGap(433, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Info", jPanel3);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setAutoscrolls(true);

        jScrollPane5.setAutoscrolls(true);

        editorPaneLogger.setContentType("text/html");
        jScrollPane5.setViewportView(editorPaneLogger);

        jTabbedPane1.addTab("Logger", jScrollPane5);

        jTree1.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jTree1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTree1KeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTree1);

        jMenu3.setText("Help");

        jMenuItem2.setText("Dial 911");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane2))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private final class RefreshZVModelListener implements ZVModelListener {

        @Override
        public void nodeCreated(ZVNode newNode) {

            boolean updateView = false;
            if (nodes != null) {
                for (ZVNode node : nodes) {
                    if (node == newNode) {
                        updateView = true;
                    }
                }
            }
            if (updateView) {
                updateView();
            }

        }

        @Override
        public void nodeDeleted(ZVNode oldNode, int oldIndex) {
            if (nodes != null) {
                for (ZVNode node : nodes) {
                    if ((node == oldNode) || (node == model.getParent(oldNode))) {
                        updateView();
                        break;
                    }
                }
            }
        }

        @Override
        public void nodeDataChanged(ZVNode node) {
            boolean updateView = false;
            if (nodes != null) {
                for (ZVNode node1 : nodes) {
                    if (node1 == node) {
                        updateView = true;
                    }
                }
            }
            if (updateView) {
                updateView();
            }
        }
    }

    private void updateView() {
        if (this.nodes == null || this.nodes.length > 1
                || !this.nodes[0].exists()) {
            labelPathValue.setText("Node Path");
            updateStatus(null);
            editorPaneData.setText("");
            editorPaneChildData.setText("");
            buttonAddChild.setEnabled(false);
            buttonDeleteNode.setEnabled(this.nodes != null);
        } else {
            labelPathValue.setText(this.nodes[0].getPath());
            updateStatus(this.nodes[0].getStat());
            byte[] data = this.nodes[0].getData();
            editorPaneData.setText(new String(data == null ? "null".getBytes() : data));
            editorPaneChildData.setText("");
            buttonUpdateData.setEnabled(!editorPaneData.getText().trim().equals(""));
            buttonAddChild.setEnabled(!textFieldChildName.getText().trim().equals(""));
            buttonDeleteNode.setEnabled(true);
        }
        this.repaint();
    }

    private void updateStatus(Stat stat) {
        if (stat == null) {
            editorPaneStatus.setText("");
        } else {
            StringBuilder stringBuilderStatus = new StringBuilder("");

            stringBuilderStatus.append("czxid: ").append(String.valueOf(stat.getCzxid())).append("\n");
            stringBuilderStatus.append("mzxid: ").append(String.valueOf(stat.getMzxid())).append("\n");
            stringBuilderStatus.append("ctime: ").append(String.valueOf(this.DATE_FORMAT.format(new Date(stat.getCtime())))).append("\n");
            stringBuilderStatus.append("mtime: ").append(this.DATE_FORMAT.format(new Date(stat.getMtime()))).append("\n");
            stringBuilderStatus.append("version: ").append(String.valueOf(stat.getVersion())).append("\n");
            stringBuilderStatus.append("a-version: ").append(String.valueOf(stat.getAversion())).append("\n");
            stringBuilderStatus.append("c-version: ").append(String.valueOf(stat.getCversion())).append("\n");
            stringBuilderStatus.append("ephemeralOwner: ").append(String.valueOf(stat.getEphemeralOwner())).append("\n");
            stringBuilderStatus.append("dataLength: ").append(String.valueOf(stat.getDataLength())).append("\n");
            stringBuilderStatus.append("numChildren: ").append(String.valueOf(stat.getNumChildren())).append("\n");
            stringBuilderStatus.append("pzxid: ").append(String.valueOf(stat.getPzxid()));

            editorPaneStatus.setText(stringBuilderStatus.toString());
            editorPaneStatus.setCaretPosition(0);
        }
    }

    /**
     * Defines the list of selected nodes.
     *
     * @param nodes the selected nodes
     */
    public void setNodes(ZVNode[] nodes) {
        if (this.nodes != null) {
            for (int i = 0; i < this.nodes.length; i++) {
                this.nodes[i].removePropertyChangeListener(ZVNode.PROPERTY_EXISTS, this.propertyListener);
            }
        }
        this.nodes = nodes;
        if (this.nodes != null) {
            for (int i = 0; i < this.nodes.length; i++) {
                this.nodes[i].addPropertyChangeListener(ZVNode.PROPERTY_EXISTS, this.propertyListener);
            }
        }
        this.updateView();
    }

    private void buttonUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateDataActionPerformed
        String updatedContent = editorPaneData.getText();
        if (nodes == null || nodes.length > 1) {
            JOptionPane.showMessageDialog(rootPane, "No node or serveral nodes selected!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (nodes == null || nodes.length != 1) {
            JOptionPane.showMessageDialog(rootPane, "No parent found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        model.updateData(nodes[0].getPath(), updatedContent.getBytes());
        addLog("<font color=\"blue\">Node data update request sent from zooviwer [" + nodes[0].getName() + ", " + new String(nodes[0].getData()) + "]</font>");
    }//GEN-LAST:event_buttonUpdateDataActionPerformed

    private void editorPaneDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editorPaneDataKeyTyped
        boolean enabled = editorPaneData.getDocument().getLength() > 0;
        buttonUpdateData.setEnabled(enabled);
    }//GEN-LAST:event_editorPaneDataKeyTyped

    private void editorPaneChildDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editorPaneChildDataKeyTyped
        boolean enabled = editorPaneChildData.getDocument().getLength() > 0;
        buttonAddChild.setEnabled(enabled);
    }//GEN-LAST:event_editorPaneChildDataKeyTyped

    private void buttonAddChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddChildActionPerformed
        if (nodes == null || nodes.length > 1) {
            JOptionPane.showMessageDialog(rootPane, "No node or serveral nodes selected!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (nodes == null || nodes.length != 1) {
            JOptionPane.showMessageDialog(rootPane, "No parent found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String childName = textFieldChildName.getText();
        if (childName == null || childName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Provide child name", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String childContent = editorPaneChildData.getText();
        try {
            model.addNode(nodes[0].getPath() + "/" + childName, childContent.getBytes());
            addLog("<font color=\"blue\">Node creation request sent from zooviwer [" + childName + ", " + childContent + "]</font>");
        } catch (IllegalStateException e) {
            addLog(e.getMessage());
        }

        textFieldChildName.setText("");
        editorPaneChildData.setText("");
    }//GEN-LAST:event_buttonAddChildActionPerformed

    private void buttonDeleteNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteNodeActionPerformed
        deleteNode();
    }//GEN-LAST:event_buttonDeleteNodeActionPerformed

    private void jTree1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTree1KeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DELETE)) {
            deleteNode();
        }
    }//GEN-LAST:event_jTree1KeyPressed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            int row = jTree1.getClosestRowForLocation(evt.getX(), evt.getY());
            jTree1.setSelectionRow(row);
            treePopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            model.close();
        } catch (InterruptedException ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void deleteNode() {
        if (nodes == null) {
            JOptionPane.showMessageDialog(rootPane, "Select node to delete!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Checks if several nodes will be deleted
        if (nodes.length > 1) {
            int selection = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete multiple node?", "Delete", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            /* OK */
            if (selection == 0) {
                addLog("<font color=\"gray\">Multiple node delete request sent from zooviwer</font>");
                model.deleteNodes(nodes);
            }
        } else {
            int selection = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete node '" + nodes[0].getName() + "'?", "Delete", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            /* OK */
            if (selection == 0) {
                addLog("<font color=\"gray\">'" + nodes[0].getName() + "' node delete request sent from zooviwer [" + nodes[0].getName() + ", " + new String(nodes[0].getData()) + "]</font>");
                model.deleteNode(nodes[0]);
            }
        }
    }

    public void addLog(String content) {
        if (!"text/html".equalsIgnoreCase(editorPaneLogger.getContentType())) {
            editorPaneLogger.setContentType("text/html");
        }

        synchronized (editorPaneLogger) {
            try {
                HTMLDocument htmlDocument = (HTMLDocument) editorPaneLogger.getDocument();
                HTMLEditorKit kit = new HTMLEditorKit();
                editorPaneLogger.setEditorKit(kit);
                editorPaneLogger.setDocument(htmlDocument);
                try {
                    kit.insertHTML(htmlDocument, htmlDocument.getLength(), new Date().toString() + "> " + content.trim(), 0, 0, null);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                editorPaneLogger.select(htmlDocument.getLength(), htmlDocument.getLength());
            } catch (BadLocationException exc) {
                exc.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JZVNode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JZVNode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JZVNode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JZVNode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddChild;
    private javax.swing.JButton buttonDeleteNode;
    private javax.swing.JButton buttonUpdateData;
    private javax.swing.JEditorPane editorPaneChildData;
    private javax.swing.JEditorPane editorPaneData;
    private javax.swing.JEditorPane editorPaneLogger;
    private javax.swing.JEditorPane editorPaneStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel labelPath;
    private javax.swing.JLabel labelPathValue;
    private javax.swing.JTextField textFieldChildName;
    // End of variables declaration//GEN-END:variables
}
